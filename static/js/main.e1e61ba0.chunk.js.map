{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/Searchbox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","name","email","id","class","alt","src","CardList","robots","cardComponent","map","user","i","Searchbox","searchfield","searchChange","className","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","response","json","users","filteredRobots","filter","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"uLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCSCQ,EAdF,SAACC,GACV,IAAOC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,MAAOC,EAAMH,EAANG,GACpB,OACA,sBAAKC,MAAM,kDAAX,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCcDK,EApBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACTC,EAAiBD,EAAOE,KAAI,SAACC,EAAKC,GAChC,OACQ,cAAC,EAAD,CAEIT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,MASzB,OACI,gCACKH,EADL,QCDOI,EAdG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKC,UAAU,KAAf,SACI,uBACIA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCAXK,EAPA,SAACpB,GACZ,OACQ,qBAAKqB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKxB,EAAMyB,YCkBRC,E,kDApBX,WAAY1B,GAAQ,IAAD,8BACf,cAAMA,IACD2B,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAGG,KAAKJ,MAAMC,SACH,6DAEJG,KAAK/B,MAAMyB,a,GAhBEQ,aCsDbC,G,wDA/CX,aAAe,IAAD,8BACV,gBAcJC,eAAiB,SAACC,GAEd,EAAKJ,SAAS,CAAClB,YAAasB,EAAMC,OAAOC,SAfzC,EAAKX,MAAQ,CACTnB,OAAQ,GACRM,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChByB,MAAM,8CACD9C,MAAK,SAAA+C,GAAQ,OAAGA,EAASC,UACzBhD,MAAK,SAAAiD,GAAK,OAAI,EAAKV,SAAS,CAACxB,OAAQkC,S,oBAW9C,WACI,MAA8BX,KAAKJ,MAA5BnB,EAAP,EAAOA,OAAQM,EAAf,EAAeA,YACT6B,EAAiBnC,EAAOoC,QAAO,SAAApC,GACjC,OAAOA,EAAOP,KAAK4C,cAAcC,SAAShC,EAAY+B,kBAG1D,OAAqB,IAAlBrC,EAAOuC,OACC,yCAED,CACF,sBAAK/B,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWD,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU3B,OAAQmC,gB,GAtC5BV,cCElBe,IAASC,OACP,8BACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B7D,M","file":"static/js/main.e1e61ba0.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    const {name, email, id} = props;\r\n    return(\r\n    <div class='bg-light-green dib br3 pa3 ma2 grow shadow-5 tc'>\r\n        <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n        <div>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n    </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    const cardComponent =  robots.map((user,i) => {\r\n            return (\r\n                    <Card \r\n                        key={i} \r\n                        id={robots[i].id} \r\n                        name={robots[i].name} \r\n                        email={robots[i].email}\r\n                    />\r\n                );\r\n            }\r\n        )\r\n        \r\n    return(\r\n        <div>\r\n            {cardComponent};\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList","import React from 'react';\r\n\r\nconst Searchbox = ({searchfield, searchChange}) => {\r\n    return(\r\n        <div className='tc'>\r\n            <input \r\n                className='pa3 ba b--green bg-lightest-blue' \r\n                type='search' \r\n                placeholder='search robots' \r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Searchbox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n            <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\r\n                {props.children}\r\n            </div>\r\n        );\r\n};\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError){\r\n            return <h1>Oops. Something went wrong.</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n\r\n};\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\n//import {robots} from './robots';\r\nimport Searchbox from '../components/Searchbox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response=> response.json())\r\n            .then(users => this.setState({robots: users}));\r\n        \r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        //console.log(event.target.value);\r\n        this.setState({searchfield: event.target.value});\r\n        \r\n        //console.log(filteredRobots);\r\n    }\r\n\r\n    render() {\r\n        const {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robots => {\r\n            return robots.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n        //console.log(filteredRobots);\r\n        if(robots.length === 0){\r\n            return <h1>Loading</h1>\r\n        } else{\r\n            return[\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <Searchbox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <CardList robots={filteredRobots}/>\r\n                        </ErrorBoundary>\r\n                    </Scroll>\r\n                </div>\r\n            ];\r\n        }\r\n    }\r\n   \r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import Card from './Card';\n//import CardList from './CardList'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n//import {robots} from './robots'\nimport App from './containers/App';\n\nReactDOM.render(\n  <div>\n    <App/>\n  </div>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}